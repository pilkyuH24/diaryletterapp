// lib/screen/settings_screen.dart (Updated with Notification Settings)

import 'package:diaryletter/config/system_ui_config.dart';
import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import 'package:supabase_flutter/supabase_flutter.dart';
import 'package:diaryletter/const/colors.dart';
import 'package:diaryletter/providers/theme_provider.dart';
import 'package:diaryletter/widgets/setting/screen/theme_settings.dart';
import 'package:diaryletter/widgets/setting/screen/notification_settings_screen.dart';
import 'package:diaryletter/screen/auth_screen.dart';
import 'package:diaryletter/widgets/setting/screen/profile_screen.dart';
import 'package:diaryletter/widgets/setting/screen/help_screen.dart';
import 'package:diaryletter/widgets/setting/screen/about_screen.dart';
import 'package:diaryletter/widgets/setting/screen/terms_policy_screen.dart';

class SettingsScreen extends StatelessWidget {
  const SettingsScreen({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    final themeProv = context.watch<ThemeProvider>();
    final tc = themeProv.colors;

    return Scaffold(
      backgroundColor: Colors.transparent,
      appBar: AppBar(
        systemOverlayStyle: SystemUIConfig.getStatusBarStyle(
          themeProv.isDarkMode,
        ),
        backgroundColor: Colors.transparent,
        elevation: 0,
        scrolledUnderElevation: 0,
        surfaceTintColor: Colors.transparent,
        shadowColor: Colors.transparent,
        centerTitle: true,
        title: Text(
          'ÏÑ§Ï†ï',
          style: TextStyle(
            color: tc.textPrimary,
            fontSize: 20,
            fontWeight: FontWeight.w700,
          ),
        ),
      ),
      body: Container(
        decoration: BoxDecoration(
          gradient: LinearGradient(
            begin: Alignment.topCenter,
            end: Alignment.bottomCenter,
            colors: [tc.surface, tc.surface, tc.accent.withOpacity(0.8)],
          ),
        ),
        child: ListView(
          padding: const EdgeInsets.all(24),
          children: [
            _buildSection('Í≥ÑÏ†ï Î∞è ÏÑ§Ï†ï', [
              _buildSettingsItem(
                icon: Icons.person_outline,
                title: 'Í≥ÑÏ†ï Î∞è Í∞úÏù∏Ï†ïÎ≥¥',
                subtitle: 'ÌîÑÎ°úÌïÑ Í¥ÄÎ¶¨ Î∞è Í∞úÏù∏Ï†ïÎ≥¥ ÏÑ§Ï†ï',
                onTap: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (_) => const ProfileScreen()),
                  );
                },
                themeProv: themeProv,
              ),
              _buildSettingsItem(
                icon: Icons.palette_outlined,
                title: 'ÌÖåÎßà',
                subtitle: 'Í∏ÄÍº¥¬∑ÏÉâÏÉÅ¬∑Îã§ÌÅ¨ Î™®Îìú',
                onTap: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (_) => ThemeSettingsScreen()),
                  );
                },
                themeProv: themeProv,
              ),
              // üÜï ÏïåÎ¶º ÏÑ§Ï†ï Ï∂îÍ∞Ä
              _buildSettingsItem(
                icon: Icons.notifications_outlined,
                title: 'ÏïåÎ¶º',
                subtitle: 'ÏùºÍ∏∞ ÏûëÏÑ± ÏïåÎ¶º Î∞è Ìë∏Ïãú ÏïåÎ¶º ÏÑ§Ï†ï',
                onTap: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                      builder: (_) => const NotificationSettingsScreen(),
                    ),
                  );
                },
                themeProv: themeProv,
              ),
            ], themeProv),
            _buildSection('Îç∞Ïù¥ÌÑ∞', [
              _buildSettingsItem(
                icon: Icons.backup_outlined,
                title: 'Îç∞Ïù¥ÌÑ∞ ÎÇ¥Î≥¥ÎÇ¥Í∏∞',
                subtitle: 'Îç∞Ïù¥ÌÑ∞ ÌååÏùºÎ°ú Î∞õÍ∏∞',
                onTap: () {
                  _showComingSoonDialog(context, 'Îç∞Ïù¥ÌÑ∞ ÎÇ¥Î≥¥ÎÇ¥Í∏∞');
                },
                themeProv: themeProv,
              ),
            ], themeProv),
            _buildSection('Ï†ïÎ≥¥ Î∞è ÏßÄÏõê', [
              _buildSettingsItem(
                icon: Icons.info_outline,
                title: 'ABOUT',
                subtitle: 'Ïï± ÏÜåÍ∞ú Î∞è ÌÅ¨Î†àÎîß',
                onTap: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (_) => const AboutScreen()),
                  );
                },
                themeProv: themeProv,
              ),
              _buildSettingsItem(
                icon: Icons.help_outline,
                title: 'ÎèÑÏõÄÎßê Î∞è ÌîºÎìúÎ∞±',
                subtitle: 'ÏÇ¨Ïö©Î≤ï Î∞è FAQ',
                onTap: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (_) => const HelpScreen()),
                  );
                },
                themeProv: themeProv,
              ),
              _buildSettingsItem(
                icon: Icons.policy_outlined,
                title: 'ÏïΩÍ¥Ä Î∞è Ï†ïÏ±Ö',
                subtitle: 'Ïù¥Ïö©ÏïΩÍ¥Ä¬∑Í∞úÏù∏Ï†ïÎ≥¥Ï≤òÎ¶¨Î∞©Ïπ®',
                onTap: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                      builder: (_) => const TermsPolicyScreen(),
                    ),
                  );
                },
                themeProv: themeProv,
              ),
            ], themeProv),
            Padding(
              padding: const EdgeInsets.symmetric(horizontal: 22, vertical: 30),
              child: ElevatedButton.icon(
                icon: Icon(Icons.logout, color: tc.textPrimary),
                label: Text(
                  'Î°úÍ∑∏ÏïÑÏõÉ',
                  style: TextStyle(
                    fontSize: 16,
                    color: tc.textPrimary,
                    // fontFamily: 'OngeulipKonKonche',
                  ),
                ),
                style: ElevatedButton.styleFrom(
                  foregroundColor: tc.background,
                  backgroundColor: tc.background,
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(12),
                  ),
                  padding: const EdgeInsets.symmetric(vertical: 14),
                ),
                onPressed: () => _showLogoutConfirmation(context),
              ),
            ),
            const SizedBox(height: 16),
          ],
        ),
      ),
    );
  }

  /// Î°úÍ∑∏ÏïÑÏõÉ ÌôïÏù∏ Îã§Ïù¥ÏñºÎ°úÍ∑∏
  void _showLogoutConfirmation(BuildContext context) {
    final themeProv = Provider.of<ThemeProvider>(context, listen: false);

    showDialog(
      context: context,
      builder: (ctx) => AlertDialog(
        backgroundColor: themeProv.colors.background,
        title: Text(
          'Î°úÍ∑∏ÏïÑÏõÉ',
          style: TextStyle(fontSize: 18, color: themeProv.colors.textPrimary),
        ),
        content: Text(
          'Ï†ïÎßê Î°úÍ∑∏ÏïÑÏõÉ ÌïòÏãúÍ≤†ÏäµÎãàÍπå?',
          style: TextStyle(fontSize: 16, color: themeProv.colors.textSecondary),
        ),
        actions: [
          TextButton(
            onPressed: () => Navigator.of(ctx).pop(), // Ï∑®ÏÜå
            child: Text(
              'Ï∑®ÏÜå',
              style: TextStyle(
                fontSize: 18,
                color: themeProv.colors.textPrimary,
              ),
            ),
          ),
          TextButton(
            onPressed: () async {
              // 1) Îã§Ïù¥ÏñºÎ°úÍ∑∏ Îã´Í∏∞
              Navigator.of(ctx).pop();
              // 2) Supabase Î°úÍ∑∏ÏïÑÏõÉ
              await Supabase.instance.client.auth.signOut();
              // 3) AuthScreenÏúºÎ°ú Ïù¥Îèô (Ïù¥Ï†Ñ Ïä§ÌÉù Î™®Îëê Ï†úÍ±∞)
              Navigator.of(context).pushAndRemoveUntil(
                MaterialPageRoute(builder: (_) => const AuthScreen()),
                (route) => false,
              );
            },
            child: Text(
              'ÌôïÏù∏',
              style: TextStyle(fontSize: 18, color: Colors.red),
            ),
          ),
        ],
      ),
    );
  }

  /// Í∞úÎ∞ú ÏòàÏ†ï Í∏∞Îä• Îã§Ïù¥ÏñºÎ°úÍ∑∏
  void _showComingSoonDialog(BuildContext context, String feature) {
    final themeProv = Provider.of<ThemeProvider>(context, listen: false);

    showDialog(
      context: context,
      builder: (ctx) => AlertDialog(
        backgroundColor: themeProv.colors.background,
        title: Text(
          'Í≥ß Ï∂úÏãú ÏòàÏ†ï',
          style: TextStyle(fontSize: 18, color: themeProv.colors.textPrimary),
        ),
        content: Text(
          '$feature Í∏∞Îä•Ïù¥ Í≥ß Ï∂îÍ∞ÄÎê† ÏòàÏ†ïÏûÖÎãàÎã§.\nÏ°∞Í∏àÎßå Í∏∞Îã§Î†§ Ï£ºÏÑ∏Ïöî!',
          style: TextStyle(fontSize: 16, color: themeProv.colors.textSecondary),
        ),
        actions: [
          TextButton(
            onPressed: () => Navigator.of(ctx).pop(),
            child: Text(
              'ÌôïÏù∏',
              style: TextStyle(fontSize: 16, color: themeProv.colors.primary),
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildSection(
    String title,
    List<Widget> children,
    ThemeProvider themeProv,
  ) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        SizedBox(height: 4),
        Text(
          title,
          style: TextStyle(
            // fontFamily: 'OngeulipKonKonche',
            fontSize: 18,
            fontWeight: FontWeight.w600,
            color: themeProv.colors.textPrimary,
          ),
        ),
        const SizedBox(height: 8),
        Container(
          decoration: BoxDecoration(
            borderRadius: BorderRadius.circular(12),
            boxShadow: [
              BoxShadow(
                color: Colors.black.withOpacity(0.05),
                blurRadius: 6,
                offset: Offset(0, 2),
              ),
            ],
          ),
          child: Column(children: children),
        ),
        const SizedBox(height: 16),
      ],
    );
  }

  Widget _buildSettingsItem({
    required IconData icon,
    required String title,
    required String subtitle,
    required VoidCallback onTap,
    required ThemeProvider themeProv,
  }) {
    return Container(
      margin: const EdgeInsets.symmetric(vertical: 6.0), // ÏïÑÏù¥ÌÖú Í∞Ñ Í∞ÑÍ≤©
      decoration: BoxDecoration(
        color: themeProv.colors.background,
        borderRadius: BorderRadius.circular(12), // Îë•Í∑º Î™®ÏÑúÎ¶¨
        boxShadow: [
          BoxShadow(
            color: Colors.black.withOpacity(0.05),
            blurRadius: 4,
            offset: Offset(0, 2),
          ),
        ],
      ),
      child: ListTile(
        leading: Icon(icon, color: TEXT_SECONDARY_COLOR),
        title: Text(
          title,
          style: TextStyle(
            // fontFamily: 'OngeulipKonKonche',
            fontWeight: FontWeight.w600,
            color: themeProv.colors.textPrimary,
          ),
        ),
        subtitle: Text(
          subtitle,
          style: TextStyle(
            // fontFamily: 'OngeulipKonKonche',
            color: themeProv.colors.textSecondary,
            fontSize: 12,
          ),
        ),
        trailing: Icon(
          Icons.arrow_forward_ios,
          size: 16,
          color: themeProv.colors.textPrimary,
        ),
        onTap: onTap,
      ),
    );
  }
}
